version: '3.8'


services:
  blue:
    image: ${BLUE_IMAGE}
    container_name: app_blue
    environment:
      - PORT=${PORT}
      - RELEASE_ID=${RELEASE_ID_BLUE}
      - APP_POOL=blue
    ports:
      - "8081:${PORT}"
    networks:
      - bg-net

  green:
    image: ${GREEN_IMAGE}
    container_name: app_green
    environment:
      - PORT=${PORT}
      - RELEASE_ID=${RELEASE_ID_GREEN}
      - APP_POOL=green
    ports:
      - "8082:${PORT}"
    networks:
      - bg-net

  nginx:
    image: nginx:stable
    container_name: bg_nginx
    depends_on:
      - blue
      - green
    ports:
      - "${PORT}:80"
    volumes:
      - ./nginx.conf.template:/etc/nginx/nginx.conf.template:ro
      - ./nginx-entrypoint.sh:/nginx-entrypoint.sh:ro
      - ./logs:/var/log/nginx
    environment:
      - ACTIVE_POOL=${ACTIVE_POOL}
      - PORT=${PORT}
    entrypoint: ["/nginx-entrypoint.sh"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/healthz"]
      interval: 10s
      timeout: 2s
      retries: 3
    networks:
      - bg-net

  alert_watcher:
    image: python:3.11-slim
    container_name: alert_watcher
    depends_on:
      - nginx
    volumes:
      - ./logs:/var/log/nginx:ro
      - ./watcher:/app:ro
    env_file:
      - .env
    entrypoint: ["/bin/sh", "-c"]
    command: >
      "pip install requests && python /app/watch_logs.py"
    restart: unless-stopped

volumes:
  logs:
    driver: local

networks:
  bg-net:
    driver: bridge