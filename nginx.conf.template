worker_processes auto;
error_log /var/log/nginx/error.log info;
events { worker_connections 1024; }


http {
    include mime.types;
    default_type application/octet-stream;

    log_format ljson escape=json '{'
    '"time":"$time_iso8601",'
    '"remote":"$remote_addr",'
    '"method":"$request_method",'
    '"path":"$request_uri",'
    '"status":"$status",'
    '"pool":"$upstream_http_x_app_pool",'
    '"release":"$upstream_http_x_release_id",'
    '"upstream_status":"$upstream_status",'
    '"upstream_addr":"$upstream_addr",'
    '"request_time":"$request_time",'
    '"upstream_response_time":"$upstream_response_time"'
  '}';


    # Upstream pool. Primary/backup semantics are driven by the entrypoint.
    upstream node_service {
        # primary pool has no "backup" token; backup pool will include it
        server blue:${PORT} max_fails=1 fail_timeout=2s${BLUE_BACKUP};
        server green:${PORT} max_fails=1 fail_timeout=2s${GREEN_BACKUP};
    }



    server {
        listen 80;

        access_log /var/log/nginx/access.log ljson;


        # Try next upstream on errors/timeouts and 5xx
        proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
        proxy_next_upstream_tries 2;


        location / {
            proxy_pass http://node_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;


            # Tight timeouts to detect failures quickly
            proxy_connect_timeout 250ms;
            proxy_send_timeout 500ms;
            proxy_read_timeout 500ms;


            # Allow upstream response headers
            # By default Nginx forwards response headers, so there's nothing to remove here.
            proxy_pass_header X-App-Pool;
            proxy_pass_header X-Release-Id;
        }


        # Health path proxies to upstream's monitoring system /healthz
        location /healthz {
            proxy_pass http://node_service/healthz;
            proxy_set_header Host $host;
            proxy_connect_timeout 250ms;
            proxy_read_timeout 500ms;
            # proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
            access_log off;
            add_header Content-Type application/json;
        }


        # Version path proxies to upstream's /version
        location /version {
            proxy_pass http://node_service/version;
            proxy_set_header Host $host;
            proxy_connect_timeout 250ms;
            proxy_read_timeout 500ms;
        }
    }
}